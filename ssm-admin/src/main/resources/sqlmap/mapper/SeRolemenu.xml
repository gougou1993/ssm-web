<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jxh.ssm.mapper.SeRolemenuMapper">

    <resultMap id="SeRolemenu" type="cn.jxh.ssm.entity.SeRolemenu">
        <result property="id" column="id"/>
        <result property="rolecode" column="rolecode"/>
        <result property="menucode" column="menucode"/>
        <result property="entrytime" column="entrytime"/>
        <result property="updatetime" column="updatetime"/>
        <result property="updateid" column="updateid"/>
    </resultMap>


    <insert id="insert" parameterType="cn.jxh.ssm.entity.SeRolemenu" useGeneratedKeys="true" keyProperty="id">
        insert into se_rolemenu (
        <trim prefixOverrides=",">
            <if test="id != null">,id</if>
            <if test="rolecode != null">,rolecode</if>
            <if test="menucode != null">,menucode</if>
            <if test="entrytime != null">,entrytime</if>
            <if test="updatetime != null">,updatetime</if>
            <if test="updateid != null">,updateid</if>
        </trim>
        ) values (
        <trim prefixOverrides=",">
            <if test="id != null">,#{id}</if>
            <if test="rolecode != null">,#{rolecode}</if>
            <if test="menucode != null">,#{menucode}</if>
            <if test="entrytime != null">,#{entrytime}</if>
            <if test="updatetime != null">,#{updatetime}</if>
            <if test="updateid != null">,#{updateid}</if>
        </trim>
        )
    </insert>

    <delete id="delete">
        delete from se_rolemenu
        <where>
            <if test="rolecode != null">and rolecode = #{rolecode}</if>
            <if test="menucode != null">and menucode = #{menucode}</if>
        </where>
    </delete>

    <update id="update" parameterType="cn.jxh.ssm.entity.SeRolemenu">
        update se_rolemenu
        <set>
            <if test="id != null">id = #{id},</if>
            <if test="rolecode != null">rolecode = #{rolecode},</if>
            <if test="menucode != null">menucode = #{menucode},</if>
            <if test="entrytime != null">entrytime = #{entrytime},</if>
            <if test="updatetime != null">updatetime = #{updatetime},</if>
            <if test="updateid != null">updateid = #{updateid},</if>
        </set>
        where id = #{id}
    </update>

    <select id="get" parameterType="java.util.Map" resultMap="SeRolemenu">
        select
        id,
        rolecode,
        menucode,
        entrytime,
        updatetime,
        updateid
        from se_rolemenu
        <where>
            <if test="id != null">and id = #{id}</if>
            <if test="rolecode != null">and rolecode = #{rolecode}</if>
            <if test="menucode != null">and menucode = #{menucode}</if>
            <if test="entrytime != null">and entrytime = #{entrytime}</if>
            <if test="updatetime != null">and updatetime = #{updatetime}</if>
            <if test="updateid != null">and updateid = #{updateid}</if>
        </where>
    </select>

    <select id="list" parameterType="java.util.Map" resultMap="SeRolemenu">
        select
        id,
        rolecode,
        menucode,
        entrytime,
        updatetime,
        updateid
        from se_rolemenu
        <where>
            <if test="id != null">and id = #{id}</if>
            <if test="rolecode != null">and rolecode = #{rolecode}</if>
            <if test="menucode != null">and menucode = #{menucode}</if>
            <if test="entrytime != null">and entrytime = #{entrytime}</if>
            <if test="updatetime != null">and updatetime = #{updatetime}</if>
            <if test="updateid != null">and updateid = #{updateid}</if>
        </where>
    </select>

    <select id="getCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*) from se_rolemenu
        <where>
            <if test="id != null">and id = #{id}</if>
            <if test="rolecode != null">and rolecode = #{rolecode}</if>
            <if test="menucode != null">and menucode = #{menucode}</if>
            <if test="entrytime != null">and entrytime = #{entrytime}</if>
            <if test="updatetime != null">and updatetime = #{updatetime}</if>
            <if test="updateid != null">and updateid = #{updateid}</if>
        </where>
    </select>


    <select id="getSplitList" parameterType="java.util.Map" resultMap="SeRolemenu">
        select
        id,
        rolecode,
        menucode,
        entrytime,
        updatetime,
        updateid
        from se_rolemenu
        <where>
            <if test="id != null">and id = #{id}</if>
            <if test="rolecode != null">and rolecode = #{rolecode}</if>
            <if test="menucode != null">and menucode = #{menucode}</if>
            <if test="entrytime != null">and entrytime = #{entrytime}</if>
            <if test="updatetime != null">and updatetime = #{updatetime}</if>
            <if test="updateid != null">and updateid = #{updateid}</if>
        </where>
        limit #{pagesize} offset #{startrow}
    </select>

    <select id="listSeMenuByUsercode" parameterType="java.util.Map" resultType="cn.jxh.ssm.entity.SeMenu">
        select distinct
        t3.id,
        t3.menucode,
        t3.parentcode,
        t3.captionname,
        t3.menuorder,
        t3.sourceurl,
        t3.classname,
        t3.visible,
        t3.entrytime,
        t3.updatetime,
        t3.updateid
        from
        se_rolemenu t1 join se_role t2 on
        (
        t1.rolecode = t2.rolecode
        and t2.visible = 1
        and
        <foreach collection="seRoleList" open="(" close=")" item="item" separator="or">
            t2.rolecode = #{item.rolecode}
        </foreach>
        ) join se_menu t3 on
        t1.menucode = t3.menucode and t3.visible = 1
        where
        t2.visible = 1
        and t3.visible = 1
        order by
        t3.menuorder asc
    </select>

</mapper>
