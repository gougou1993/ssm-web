<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jxh.ssm.mapper.SeRoleuserMapper">

    <resultMap id="SeRoleuser" type="cn.jxh.ssm.entity.SeRoleuser">
        <result property="id" column="id"/>
        <result property="rolecode" column="rolecode"/>
        <result property="usercode" column="usercode"/>
        <result property="entrytime" column="entrytime"/>
        <result property="updatetime" column="updatetime"/>
        <result property="updateid" column="updateid"/>
    </resultMap>


    <insert id="insert" parameterType="cn.jxh.ssm.entity.SeRoleuser" useGeneratedKeys="true" keyProperty="id">
        insert into se_roleuser (
        <trim prefixOverrides=",">
            <if test="id != null">,id</if>
            <if test="rolecode != null">,rolecode</if>
            <if test="usercode != null">,usercode</if>
            <if test="entrytime != null">,entrytime</if>
            <if test="updatetime != null">,updatetime</if>
            <if test="updateid != null">,updateid</if>
        </trim>
        ) values (
        <trim prefixOverrides=",">
            <if test="id != null">,#{id}</if>
            <if test="rolecode != null">,#{rolecode}</if>
            <if test="usercode != null">,#{usercode}</if>
            <if test="entrytime != null">,#{entrytime}</if>
            <if test="updatetime != null">,#{updatetime}</if>
            <if test="updateid != null">,#{updateid}</if>
        </trim>
        )
    </insert>

    <delete id="delete">
        delete from se_roleuser
        <where>
            <if test="rolecode != null">and rolecode = #{rolecode}</if>
            <if test="usercode != null">and usercode = #{usercode}</if>
        </where>
    </delete>

    <update id="update" parameterType="cn.jxh.ssm.entity.SeRoleuser">
        update se_roleuser
        <set>
            <if test="id != null">id = #{id},</if>
            <if test="rolecode != null">rolecode = #{rolecode},</if>
            <if test="usercode != null">usercode = #{usercode},</if>
            <if test="entrytime != null">entrytime = #{entrytime},</if>
            <if test="updatetime != null">updatetime = #{updatetime},</if>
            <if test="updateid != null">updateid = #{updateid},</if>
        </set>
        where id = #{id}
    </update>

    <select id="get" parameterType="java.util.Map" resultMap="SeRoleuser">
        select
        id,
        rolecode,
        usercode,
        entrytime,
        updatetime,
        updateid
        from se_roleuser
        <where>
            <if test="id != null">and id = #{id}</if>
            <if test="rolecode != null">and rolecode = #{rolecode}</if>
            <if test="usercode != null">and usercode = #{usercode}</if>
            <if test="entrytime != null">and entrytime = #{entrytime}</if>
            <if test="updatetime != null">and updatetime = #{updatetime}</if>
            <if test="updateid != null">and updateid = #{updateid}</if>
        </where>
    </select>

    <select id="list" parameterType="java.util.Map" resultMap="SeRoleuser">
        select
        id,
        rolecode,
        usercode,
        entrytime,
        updatetime,
        updateid
        from se_roleuser
        <where>
            <if test="id != null">and id = #{id}</if>
            <if test="rolecode != null">and rolecode = #{rolecode}</if>
            <if test="usercode != null">and usercode = #{usercode}</if>
            <if test="entrytime != null">and entrytime = #{entrytime}</if>
            <if test="updatetime != null">and updatetime = #{updatetime}</if>
            <if test="updateid != null">and updateid = #{updateid}</if>
        </where>
    </select>

    <select id="getCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*) from se_roleuser
        <where>
            <if test="id != null">and id = #{id}</if>
            <if test="rolecode != null">and rolecode = #{rolecode}</if>
            <if test="usercode != null">and usercode = #{usercode}</if>
            <if test="entrytime != null">and entrytime = #{entrytime}</if>
            <if test="updatetime != null">and updatetime = #{updatetime}</if>
            <if test="updateid != null">and updateid = #{updateid}</if>
        </where>
    </select>


    <select id="getSplitList" parameterType="java.util.Map" resultMap="SeRoleuser">
        select
        id,
        rolecode,
        usercode,
        entrytime,
        updatetime,
        updateid
        from se_roleuser
        <where>
            <if test="id != null">and id = #{id}</if>
            <if test="rolecode != null">and rolecode = #{rolecode}</if>
            <if test="usercode != null">and usercode = #{usercode}</if>
            <if test="entrytime != null">and entrytime = #{entrytime}</if>
            <if test="updatetime != null">and updatetime = #{updatetime}</if>
            <if test="updateid != null">and updateid = #{updateid}</if>
        </where>
        limit #{pagesize} offset #{startrow}
    </select>

    <select id="listSeRolesByUsercode" parameterType="java.util.Map" resultType="cn.jxh.ssm.entity.SeRole">
        select
        t1.id,
        t1.rolecode,
        t1.roledesc,
        t1.content,
        t1.entrytime,
        t1.updatetime,
        t1.updateid
        from
        se_role t1 left join se_roleuser t2 on
        t1.rolecode = t2.rolecode
        where
        t2.usercode = #{usercode}
        and t1.visible = 1
    </select>

    <select id="listSeUserByRolecode" parameterType="java.util.Map" resultType="cn.jxh.ssm.entity.SeUser">
        select
        t1.id,
        t1.usercode,
        t1.pname,
        t1.password,
        t1.uname,
        t1.birthym,
        t1.pic,
        t1.telcode,
        t1.email,
        t1.visible,
        t1.entrytime,
        t1.updatetime,
        t1.updateid
        from
        se_roleuser t2 left join se_user t1 on
        t1.usercode = t2.usercode
        where
        t2.rolecode = #{rolecode}
        and t1.visible = 1
    </select>

    <select id="listSeUserByName" parameterType="java.util.Map" resultType="cn.jxh.ssm.entity.SeUser">
        select
        t1.id,
        t1.usercode,
        t1.pname,
        t1.password,
        t1.uname,
        t1.birthym,
        t1.pic,
        t1.telcode,
        t1.email,
        t1.visible,
        t1.entrytime,
        t1.updatetime,
        t1.updateid
        from
        se_user t1
        where
        t1.pname like concat('%',#{name},'%') or t1.uname like concat('%',#{name},'%')
        and t1.visible = 1
    </select>

</mapper>
